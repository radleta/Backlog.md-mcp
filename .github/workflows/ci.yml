name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Install source dependencies
        run: |
          cd source
          npm ci
      
      - name: Build project
        run: |
          cd source
          npm run build
      
      - name: Install package dependencies
        run: |
          cd package
          npm ci --production
      
      - name: Run tests
        run: |
          cd source
          npm test
      
      - name: Type check
        run: |
          cd source
          npm run typecheck
      
      - name: Lint
        run: |
          cd source
          npm run lint
      
      - name: Verify build output
        run: |
          test -f package/dist/cli.js
          test -f package/dist/server.js
          test -f package/dist/config.js
          test -f package/dist/setup.js
        shell: bash

  build-full:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Run build script (Unix)
        if: runner.os != 'Windows'
        run: |
          chmod +x build.sh
          ./build.sh
      
      - name: Run build script (Windows)
        if: runner.os == 'Windows'
        run: |
          cd source
          npm ci
          npm run build
          cd ../package
          npm ci --production
        shell: bash
      
      - name: Test CLI help
        run: |
          cd package
          node dist/cli.js --help
        shell: bash
      
      - name: Test CLI info
        run: |
          cd package
          node dist/cli.js info
        shell: bash

  validate-package:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Build project
        run: |
          cd source
          npm ci
          npm run build
      
      - name: Install package dependencies
        run: |
          cd package
          npm ci --production
      
      - name: Validate package.json
        run: |
          cd package
          npm pack --dry-run
      
      - name: Check ES module compatibility
        run: |
          cd package
          node -e "import('./dist/server.js').then(() => console.log('ES modules working!'))"
      
      - name: Verify MCP server can start
        run: |
          cd package
          timeout 5s node dist/server.js || true
        shell: bash